import{a as t}from"./chunk-Q62EKAOT.js";import{c as h}from"./chunk-ERJP7BH4.js";import{C as a,N as n,V as l,_ as p,ea as c,g as i,o}from"./chunk-MB7SRDLP.js";var m=class s{http=c(h);cache=new Map;buildsUrl=`${t.apiUrl}buildings/List`;GatAllBuilds(){return this.http.get(this.buildsUrl)}GetBuildsList(){return this.cache.has(this.buildsUrl)?(console.log("Returning cached buildings list"),new i(e=>{e.next(this.cache.get(this.buildsUrl)?.body),e.complete()})):this.http.get(this.buildsUrl,{observe:"response"}).pipe(n(2),l(e=>{this.cache.set(this.buildsUrl,e)}),a(this.handleError))}clearCache(){this.cache.clear(),console.log("Buildings list cache cleared")}handleError(e){console.error("Error fetching buildings list:",e);let r="Something went wrong! Please try again later.";return e.error instanceof ErrorEvent?r=`Client-side error: ${e.error.message}`:r=`Server-side error: ${e.status} - ${e.message}`,o(()=>new Error(r))}GetAllRooms(){return this.http.get(`${t.apiUrl}rooms/list`)}updateRoom(e){return this.http.put(`${t.apiUrl}rooms/update`,e)}CreateRoom(e){return this.http.post(`${t.apiUrl}rooms/create`,e)}DeleteRoom(e){return this.http.delete(`${t.apiUrl}rooms/${e}`)}static \u0275fac=function(r){return new(r||s)};static \u0275prov=p({token:s,factory:s.\u0275fac,providedIn:"root"})};export{m as a};
